openapi: 3.0.0
info:
  title: Taxi Aggregator DB Service
  description: обращения операторов Такси к БД водителей.
  version: "1.0"
servers:
- url: /
paths:
  /v1/drivers/fatigue:
    post:
      summary: фиксировани усталости водителй
      description: приём (запись) данных о времени "на линии" и время на заказе для
        каждого водителя из заданного подможества
      operationId: v1_drivers_fatigue_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FatigueBody'
        required: true
      responses:
        "200":
          description: Ok
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /v1/drivers/online/hourly:
    post:
      summary: Получение информации "на линии" (online) для группы водителей.
      description: были ли водители на линии в течение часа с момента __timestamp__
      operationId: v1_drivers_online_hourly_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRequest'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HourResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /v1/drivers/online/quater_hourly:
    post:
      summary: Получение информации "на линии" (online) для группы водителей
      description: были ли водители на линии в течение часа с момента __timestamp__
        с информацией на каждые 15 мин
      operationId: v1_drivers_online_quater_hourly_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRequest'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuartersResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
  /v1/drivers/on_order:
    post:
      summary: Получение информации "на заказе" для группы водителей
      description: были ли водители на заказе в течение часа с момента __timestamp__
      operationId: v1_drivers_on_order_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeRequest'
        required: true
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuartersResponse'
      x-openapi-router-controller: swagger_server.controllers.default_controller
components:
  schemas:
    FatigueBody:
      type: object
      properties:
        timestamp:
          type: string
          description: timestamp, от которого отсчитываются соответствующие времена
            на линиии и на заказе.
          format: date-time
        drivers:
          type: array
          description: информация о времени "на линии" и на заказах водителей
          items:
            $ref: '#/components/schemas/DriverFatigue'
    TimeRequest:
      type: object
      properties:
        timestamp:
          type: string
          description: timestamp, от которого отсчитываются соответствующие времена
            на линиии и на заказе.
          format: date-time
        drivers:
          required:
          - drivers
          - timestamp
          type: array
          description: массив хешей водителей
          items:
            $ref: '#/components/schemas/DriverHash'
    HourResponse:
      type: object
      properties:
        drivers:
          required:
          - drivers
          type: array
          description: массив структур вида [{hash_id, online}, ...]
          items:
            $ref: '#/components/schemas/DriverSingleData'
      example:
        drivers:
        - online: true
          hash_id: hash_id
        - online: true
          hash_id: hash_id
    QuartersResponse:
      type: object
      properties:
        drivers:
          required:
          - drivers
          type: array
          description: массив структур вида [{hash_id, {online, online, online, online},
            ...]
          items:
            $ref: '#/components/schemas/DriverQuadData'
      example:
        drivers:
        - - true
          - true
          - true
          - true
        - - true
          - true
          - true
          - true
    DriverHash:
      type: string
      description: sha256 от ФИО водителя и номера его водительского удостоверения.
    SingleData:
      type: boolean
    DriverFatigue:
      type: object
      properties:
        hash_id:
          $ref: '#/components/schemas/DriverHash'
        online:
          $ref: '#/components/schemas/SingleData'
        on_order:
          $ref: '#/components/schemas/SingleData'
    DriverQuadData:
      maxItems: 4
      minItems: 4
      type: array
      description: содержит 4 значения
      items:
        $ref: '#/components/schemas/SingleData'
    DriverSingleData:
      required:
      - hash_id
      - online
      type: object
      properties:
        hash_id:
          $ref: '#/components/schemas/DriverHash'
        online:
          $ref: '#/components/schemas/SingleData'
      example:
        online: true
        hash_id: hash_id

